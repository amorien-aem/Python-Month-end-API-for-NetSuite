name: Deploy to Render with health check and rollback

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: trigger_deploy
      - name: Trigger Render deploy
        if: ${{ secrets.RENDER_SERVICE_ID && secrets.RENDER_API_KEY }}
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          echo "Triggering deploy for service $RENDER_SERVICE_ID"
          resp=$(curl -s -X POST \
            -H "Authorization: Bearer $RENDER_API_KEY" \
            -H "Accept: application/json" \
            https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys -d '{}')
          echo "$resp" | jq .
          deploy_id=$(echo "$resp" | jq -r .id)
          if [ -z "$deploy_id" ] || [ "$deploy_id" == "null" ]; then
            echo "Failed to create deploy" >&2
            exit 1
          fi
          echo "deploy_id=$deploy_id" >> $GITHUB_OUTPUT

      - name: Wait for deploy and poll health
        if: ${{ secrets.RENDER_SERVICE_ID && secrets.RENDER_API_KEY }}
        env:
          RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          deploy_id=${{ steps.trigger_deploy.outputs.deploy_id }}
          echo "Waiting for deploy $deploy_id to finish..."
          # Poll deploy status
          for i in $(seq 1 60); do
            stat=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" https://api.render.com/v1/deploys/$deploy_id)
            state=$(echo "$stat" | jq -r .state)
            echo "deploy state: $state"
            if [ "$state" = "live" ]; then
              echo "Deploy is live"
              break
            fi
            if [ "$state" = "failed" ]; then
              echo "Deploy failed" >&2
              exit 1
            fi
            sleep 5
          done

          # Get service default domain
          svc=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" https://api.render.com/v1/services/$RENDER_SERVICE_ID)
          domain=$(echo "$svc" | jq -r '.defaultDomain')
          echo "Service domain: $domain"

          # Poll health endpoint
          unhealthy=0
          for i in $(seq 1 30); do
            status=$(curl -s -o /dev/null -w "%{http_code}" https://$domain/health || true)
            echo "health HTTP status: $status"
            if [ "$status" = "200" ]; then
              echo "Health check passed"
              unhealthy=0
              break
            fi
            unhealthy=1
            sleep 5
          done

          if [ "$unhealthy" -ne 0 ]; then
            echo "Health check failed. Attempting rollback..."
            # Find last successful deploy
            last=$(curl -s -H "Authorization: Bearer $RENDER_API_KEY" https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys | jq -r '.[] | select(.state=="live") | .id' | head -n1)
            if [ -z "$last" ]; then
              echo "No previous live deploy to rollback to" >&2
              exit 1
            fi
            echo "Triggering redeploy of $last"
            curl -s -X POST -H "Authorization: Bearer $RENDER_API_KEY" https://api.render.com/v1/deploys/$last/retry | jq .
            exit 1
          fi

      - name: Done
        run: echo "Deploy finished"
